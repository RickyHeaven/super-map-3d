define(["./AttributeCompression-7ac8aa9b","./EllipsoidTangentPlane-c14b1868","./buildModuleUrl-0b6ed7f4","./Ellipsoid-a181f4f7","./Cartesian3-9e1fac2b","./Cartographic-832093e6","./defaultValue-a9572088","./TerrainEncoding-b44789af","./IndexDatatype-42a29532","./Math-42d8c121","./PrimitiveType-56cd8f05","./OrientedBoundingBox-4c78d647","./Rectangle-15196776","./Check-1ab97039","./GeometryAttribute-96eb6e6a","./WebMercatorProjection-6eaad0a0","./createTaskProcessorWorker","./Cartesian4-c70aabd2","./IntersectionTests-b7b35aa4","./FeatureDetection-b832308f","./defer-027bcf35","./Plane-5520c09d","./Event-086a9f30","./RuntimeError-7a3815c0","./ComponentDatatype-00a8741a","./WebGLConstants-ade65f0f","./PolygonPipeline-2e7b86a0","./EllipsoidRhumbLine-07313960"],(function(e,t,r,n,i,o,a,s,h,c,d,u,l,I,m,g,T,y,f,v,w,p,E,N,b,S,A,x){"use strict";function P(){I.t.throwInstantiationError()}Object.defineProperties(P.prototype,{errorEvent:{get:I.t.throwInstantiationError},credit:{get:I.t.throwInstantiationError},tilingScheme:{get:I.t.throwInstantiationError},ready:{get:I.t.throwInstantiationError},readyPromise:{get:I.t.throwInstantiationError},hasWaterMask:{get:I.t.throwInstantiationError},hasVertexNormals:{get:I.t.throwInstantiationError},availability:{get:I.t.throwInstantiationError}});var _=[];P.getRegularGridIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=_[e];a.e(r)||(_[e]=r=[]);var n=r[t];return a.e(n)||B(e,t,n=e*t<c.e.SIXTY_FOUR_KILOBYTES?r[t]=new Uint16Array((e-1)*(t-1)*6+3*(e+t-2)):r[t]=new Uint32Array((e-1)*(t-1)*6+3*(e+t-2)),0),n},P.getRegularGridIndicesForReproject=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=_[e];a.e(r)||(_[e]=r=[]);var n=r[t];return a.e(n)||B(e,t,n=e*t<c.e.SIXTY_FOUR_KILOBYTES?r[t]=new Uint16Array((e-1)*(t-1)*6):r[t]=new Uint32Array((e-1)*(t-1)*6),0),n};var F=[];P.getRegularGridIndicesAndEdgeIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=F[e];a.e(r)||(F[e]=r=[]);var n=r[t];if(!a.e(n)){var i=P.getRegularGridIndices(e,t),o=G(e,t),s=o.westIndicesSouthToNorth,h=o.southIndicesEastToWest,d=o.eastIndicesNorthToSouth,u=o.northIndicesWestToEast;n=r[t]={indices:i,westIndicesSouthToNorth:s,southIndicesEastToWest:h,eastIndicesNorthToSouth:d,northIndicesWestToEast:u}}return n};var M=[];function G(e,t){var r,n=new Array(t),i=new Array(e),o=new Array(t),a=new Array(e);for(r=0;r<e;++r)a[r]=r,i[r]=e*t-1-r;for(r=0;r<t;++r)o[r]=(r+1)*e-1,n[r]=(t-r-1)*e;return{westIndicesSouthToNorth:n,southIndicesEastToWest:i,eastIndicesNorthToSouth:o,northIndicesWestToEast:a}}function B(e,t,r,n){for(var i=0,o=0;o<t-1;++o){for(var a=0;a<e-1;++a){var s=i,h=s+e,c=h+1,d=s+1;r[n++]=s,r[n++]=h,r[n++]=d,r[n++]=d,r[n++]=h,r[n++]=c,++i}++i}var u=(t-1)/2,l=(e-1)/2;i=0;for(a=0;a<l;a++)r[n++]=i,r[n++]=i+1,r[n++]=i+2,i+=2;i=e*(t-1);for(a=0;a<l;a++)r[n++]=i+1,r[n++]=i,r[n++]=i+2,i+=2;i=0;for(a=0;a<u;a++)r[n++]=i+e,r[n++]=i,r[n++]=i+2*e,i+=2*e;i=e-1;for(a=0;a<u;a++)r[n++]=i,r[n++]=i+e,r[n++]=i+2*e,i+=2*e}function W(e,t,r,n,i){for(var o=a.e(i),s=e[0],h=e.length,c=1;c<h;++c){var d=e[c];!o||i[s+"_"+d]?(r[n++]=s,r[n++]=d,r[n++]=t,r[n++]=t,r[n++]=d,r[n++]=t+1,s=d,++t):(s=d,++t)}return n}P.getRegularGridAndSkirtIndicesAndEdgeIndices=function(e,t){if(e*t>=c.e.FOUR_GIGABYTES)throw new I.t("The total number of vertices (width * height) must be less than 4,294,967,296.");var r=M[e];a.e(r)||(M[e]=r=[]);var n=r[t];if(!a.e(n)){var i=e*t,o=(e-1)*(t-1)*6,s=2*e+2*t,d=i+s,u=3*(e+t-2),l=o+6*Math.max(0,s-4)+u,m=G(e,t),g=m.westIndicesSouthToNorth,T=m.southIndicesEastToWest,y=m.eastIndicesNorthToSouth,f=m.northIndicesWestToEast,v=h.IndexDatatype.createTypedArray(d,l);B(e,t,v,0),P.addSkirtIndices(g,T,y,f,i,v,o+u),n=r[t]={indices:v,westIndicesSouthToNorth:g,southIndicesEastToWest:T,eastIndicesNorthToSouth:y,northIndicesWestToEast:f,indexCountWithoutSkirts:o}}return n},P.clearIndicesCache=function(){F=[],M=[]},P.addSkirtIndices=function(e,t,r,n,i,o,a,s){var h=i;a=W(e,h,o,a,s),a=W(t,h+=e.length,o,a,s),a=W(r,h+=t.length,o,a,s),W(n,h+=r.length,o,a,s)},P.heightmapTerrainQuality=.25,P.getEstimatedLevelZeroGeometricErrorForAHeightmap=function(e,t,r){return 2*e.maximumRadius*Math.PI*P.heightmapTerrainQuality/(t*r)},P.prototype.requestTileGeometry=I.t.throwInstantiationError,P.prototype.getLevelMaximumGeometricError=I.t.throwInstantiationError,P.prototype.getTileDataAvailable=I.t.throwInstantiationError,P.prototype.loadTileDataAvailability=I.t.throwInstantiationError;var C=32767,O=new i.o,Y=new i.o,k=new i.o,H=new o.a,R=new n.o,V=new i.o,U=new d.y,z=new d.y;function L(e,t,r,n,o,a,s,h,u){var l=Number.POSITIVE_INFINITY,I=o.north,m=o.south,g=o.east,T=o.west;g<T&&(g+=c.e.TWO_PI);for(var y=e.length,f=0;f<y;++f){var v=e[f],w=r[v],p=n[v];H.longitude=c.e.lerp(T,g,p.x),H.latitude=c.e.lerp(m,I,p.y),H.height=w-t;var E=a.cartographicToCartesian(H,O);d.y.multiplyByPoint(s,E,E),i.o.minimumByComponent(E,h,h),i.o.maximumByComponent(E,u,u),l=Math.min(l,H.height)}return l}function D(t,r,n,o,s,h,u,l,I,T,y,f,v,w,p){var E=a.e(u),N=I.north,b=I.south,S=I.east,A=I.west;S<A&&(S+=c.e.TWO_PI);for(var x=n.length,P=0;P<x;++P){var _=n[P],F=s[_],M=h[_];H.longitude=c.e.lerp(A,S,M.x)+w,H.latitude=c.e.lerp(b,N,M.y)+p,H.height=F-T;var G,B=l.cartographicToCartesian(H,O);if(E){var W=2*_;if(R.x=u[W],R.y=u[W+1],1!==y){var C=e.t.octDecode(R.x,R.y,V),Y=m.m.eastNorthUpToFixedFrame(O,l,z),k=d.y.inverseTransformation(Y,U);d.y.multiplyByPointAsVector(k,C,C),C.z*=y,i.o.normalize(C,C),d.y.multiplyByPointAsVector(Y,C,C),i.o.normalize(C,C),e.t.octEncode(C,R)}}o.hasWebMercatorT&&(G=(g.t.geodeticLatitudeToMercatorAngle(H.latitude)-f)*v),r=o.encode(t,r,B,M,H.height,R,G)}}function j(e,t){var r;return"function"==typeof e.slice&&"function"!=typeof(r=e.slice()).sort&&(r=void 0),a.e(r)||(r=Array.prototype.slice.call(e)),r.sort(t),r}var q=T((function(o,I){var T,y,f=o.quantizedVertices,v=f.length/3,w=o.octEncodedNormals,p=o.westIndices.length+o.eastIndices.length+o.southIndices.length+o.northIndices.length,E=o.includeWebMercatorT,N=l.h.clone(o.rectangle),b=N.west,S=N.south,A=N.east,x=N.north,_=n.t.clone(o.ellipsoid),F=o.exaggeration,M=o.minimumHeight*F,G=o.maximumHeight*F,B=a.e(o.validMinimumHeight)?o.validMinimumHeight*F:M*F,W=a.e(o.validMaximumHeight)?o.validMaximumHeight*F:G*F,q=o.relativeToCenter,K=m.m.eastNorthUpToFixedFrame(q,_),Q=d.y.inverseTransformation(K,new d.y);E&&(T=g.t.geodeticLatitudeToMercatorAngle(S),y=1/(g.t.geodeticLatitudeToMercatorAngle(x)-T));var X=f.subarray(0,v),Z=f.subarray(v,2*v),J=f.subarray(2*v,3*v),$=a.e(w),ee=new Array(v),te=new Array(v),re=new Array(v),ne=E?new Array(v):[],ie=Y;ie.x=Number.POSITIVE_INFINITY,ie.y=Number.POSITIVE_INFINITY,ie.z=Number.POSITIVE_INFINITY;var oe=k;oe.x=Number.NEGATIVE_INFINITY,oe.y=Number.NEGATIVE_INFINITY,oe.z=Number.NEGATIVE_INFINITY;for(var ae=Number.POSITIVE_INFINITY,se=Number.NEGATIVE_INFINITY,he=Number.POSITIVE_INFINITY,ce=Number.NEGATIVE_INFINITY,de=0;de<v;++de){var ue=X[de],le=Z[de],Ie=ue/C,me=le/C,ge=c.e.lerp(M,G,J[de]/C);H.longitude=c.e.lerp(b,A,Ie),H.latitude=c.e.lerp(S,x,me),H.height=ge,ae=Math.min(H.longitude,ae),se=Math.max(H.longitude,se),he=Math.min(H.latitude,he),ce=Math.max(H.latitude,ce);var Te=_.cartographicToCartesian(H);ee[de]=new n.o(Ie,me),te[de]=ge,re[de]=Te,E&&(ne[de]=(g.t.geodeticLatitudeToMercatorAngle(H.latitude)-T)*y),d.y.multiplyByPoint(Q,Te,O),i.o.minimumByComponent(O,ie,ie),i.o.maximumByComponent(O,oe,oe)}var ye,fe,ve=j(o.westIndices,(function(e,t){return ee[e].y-ee[t].y})),we=j(o.eastIndices,(function(e,t){return ee[t].y-ee[e].y})),pe=j(o.southIndices,(function(e,t){return ee[t].x-ee[e].x})),Ee=j(o.northIndices,(function(e,t){return ee[e].x-ee[t].x}));fe=r.i.fromPoints(re),ye=u.p.fromRectangle(N,M,G,_);var Ne,be=u.p.fromRectangle(N,B,W,_);(1!==F||M<0)&&(Ne=new s.s(_).computeHorizonCullingPointPossiblyUnderEllipsoid(q,re,M));var Se=M;Se=Math.min(Se,L(o.westIndices,o.westSkirtHeight,te,ee,N,_,Q,ie,oe)),Se=Math.min(Se,L(o.southIndices,o.southSkirtHeight,te,ee,N,_,Q,ie,oe)),Se=Math.min(Se,L(o.eastIndices,o.eastSkirtHeight,te,ee,N,_,Q,ie,oe)),Se=Math.min(Se,L(o.northIndices,o.northSkirtHeight,te,ee,N,_,Q,ie,oe));for(var Ae=new t.e(ie,oe,q),xe=new s.h(Ae,Se,G,K,$,E),Pe=xe.getStride(),_e=new Float32Array(v*Pe+p*Pe),Fe=0,Me=0;Me<v;++Me){if($){var Ge=2*Me;if(R.x=w[Ge],R.y=w[Ge+1],1!==F){var Be=e.t.octDecode(R.x,R.y,V),We=m.m.eastNorthUpToFixedFrame(re[Me],_,z),Ce=d.y.inverseTransformation(We,U);d.y.multiplyByPointAsVector(Ce,Be,Be),Be.z*=F,i.o.normalize(Be,Be),d.y.multiplyByPointAsVector(We,Be,Be),i.o.normalize(Be,Be),e.t.octEncode(Be,R)}}Fe=xe.encode(_e,Fe,re[Me],ee[Me],te[Me],R,ne[Me])}var Oe=Math.max(0,2*(p-4)),Ye=o.indices.length+3*Oe,ke=h.IndexDatatype.createTypedArray(v+p,Ye);ke.set(o.indices,0);var He=1e-4,Re=(se-ae)*He,Ve=(ce-he)*He,Ue=-Re,ze=Re,Le=Ve,De=-Ve,je=v*Pe;D(_e,je,ve,xe,te,ee,w,_,N,o.westSkirtHeight,F,T,y,Ue,0),D(_e,je+=o.westIndices.length*Pe,pe,xe,te,ee,w,_,N,o.southSkirtHeight,F,T,y,0,De),D(_e,je+=o.southIndices.length*Pe,we,xe,te,ee,w,_,N,o.eastSkirtHeight,F,T,y,ze,0),D(_e,je+=o.eastIndices.length*Pe,Ee,xe,te,ee,w,_,N,o.northSkirtHeight,F,T,y,0,Le);var qe=function(e,t,r,n){if(n<12)return;for(var i={},o=e.length,a=0;a<o;a+=3){var s=e[a],h=e[a+1],c=e[a+2];(t[s]===C&&t[h]===C||0===t[s]&&0===t[h]||r[s]===C&&r[h]===C||0===r[s]&&0===r[h])&&(i[s+"_"+h]=1,i[h+"_"+s]=1),(t[h]===C&&t[c]===C||0===t[h]&&0===t[c]||r[h]===C&&r[c]===C||0===r[h]&&0===r[c])&&(i[h+"_"+c]=1,i[c+"_"+h]=1),(t[c]===C&&t[s]===C||0===t[c]&&0===t[s]||r[c]===C&&r[s]===C||0===r[c]&&0===r[s])&&(i[c+"_"+s]=1,i[s+"_"+c]=1)}return i}(o.indices,X,Z,o.level);return P.addSkirtIndices(ve,pe,we,Ee,v,ke,o.indices.length,qe),I.push(_e.buffer,ke.buffer),{vertices:_e.buffer,indices:ke.buffer,westIndicesSouthToNorth:ve,southIndicesEastToWest:pe,eastIndicesNorthToSouth:we,northIndicesWestToEast:Ee,vertexStride:Pe,center:q,minimumHeight:M,maximumHeight:G,boundingSphere:fe,orientedBoundingBox:ye,validOrientedBoundingBox:be,occludeePointInScaledSpace:Ne,encoding:xe,indexCountWithoutSkirts:o.indices.length}}));return q}));
